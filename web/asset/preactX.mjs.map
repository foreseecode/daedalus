{
  "version": 3,
  "file": "preact.js",
  "sources": [
    "../src/constants.js",
    "../src/options.js",
    "../src/component.js",
    "../src/diff/props.js",
    "../src/create-context.js",
    "../src/util.js",
    "../src/create-element.js",
    "../src/diff/children.js",
    "../src/diff/index.js",
    "../src/render.js",
    "../src/clone-element.js"
  ],
  "sourcesContent": [
    "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n",
    "/** @type {import('./index').Options}  */\nconst options = {};\n\nexport default options;\n",
    "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._ancestorComponent = null; // Always set right after instantiation\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._prevVNode = null;\n\t// this._processingException = null; // Always read, set only when handling error\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-renderd\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tlet vnode = this._vnode, dom = this._vnode._dom, parentDom = this._parentDom;\n\tif (parentDom) {\n\t\t// Set render mode so that we can differantiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tconst force = callback!==false;\n\n\t\tlet mounts = [];\n\t\tdom = diff(dom, parentDom, vnode, vnode, this._context, parentDom.ownerSVGElement!==undefined, null, mounts, this._ancestorComponent, force, dom);\n\t\tif (dom!=null && dom.parentNode!==parentDom) {\n\t\t\tparentDom.appendChild(dom);\n\t\t}\n\t\tcommitRoot(mounts, vnode);\n\t}\n\tif (callback) callback();\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistenly reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (!c._dirty && (c._dirty = true) && q.push(c) === 1) {\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._depth - a._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) p.forceUpdate(false);\n\t}\n}\n",
    "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n */\nexport function diffProps(dom, newProps, oldProps, isSvg) {\n\tfor (let i in newProps) {\n\t\tif (i!=='children' && i!=='key' && (!oldProps || ((i==='value' || i==='checked') ? dom : oldProps)[i]!==newProps[i])) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n\tfor (let i in oldProps) {\n\t\tif (i!=='children' && i!=='key' && (!newProps || !(i in newProps))) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nlet CAMEL_REG = /-?(?=[A-Z])/g;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tlet v;\n\tif (name==='class' || name==='className') name = isSvg ? 'class' : 'className';\n\n\tif (name==='style') {\n\n\t\t/* Possible golfing activities for setting styles:\n\t\t *   - we could just drop String style values. They're not supported in other VDOM libs.\n\t\t *   - assigning to .style sets .style.cssText - TODO: benchmark this, might not be worth the bytes.\n\t\t *   - assigning also casts to String, and ignores invalid values. This means assigning an Object clears all styles.\n\t\t */\n\t\tlet s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') s.cssText = '';\n\t\t\telse {\n\t\t\t\t// remove values not in the new list\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (value==null || !(i in value)) s.setProperty(i.replace(CAMEL_REG, '-'), '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tv = value[i];\n\t\t\t\tif (oldValue==null || v!==oldValue[i]) {\n\t\t\t\t\ts.setProperty(i.replace(CAMEL_REG, '-'), typeof v==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (v + 'px') : v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\treturn;\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).substring(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='tagName' && !isSvg && (name in dom)) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (value==null || value===false) {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) dom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\telse dom.removeAttribute(name);\n\t}\n\telse if (typeof value!=='function') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) dom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\telse dom.setAttribute(name, value);\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n",
    "import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tconst id = '__cC' + i++;\n\n\tlet context = {\n\t\t_id: id,\n\t\t_defaultValue: defaultValue\n\t};\n\n\tfunction Consumer(props, context) {\n\t\treturn props.children(context);\n\t}\n\tConsumer.contextType = context;\n\tcontext.Consumer = Consumer;\n\n\tlet ctx = { [id]: null };\n\n\tfunction initProvider(comp) {\n\t\tconst subs = [];\n\t\tcomp.getChildContext = () => {\n\t\t\tctx[id] = comp;\n\t\t\treturn ctx;\n\t\t};\n\t\tcomp.shouldComponentUpdate = props => {\n\t\t\tsubs.map(c => {\n\t\t\t\t// Check if still mounted\n\t\t\t\tif (c._parentDom) {\n\t\t\t\t\tc.context = props.value;\n\t\t\t\t\tenqueueRender(c);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tcomp.sub = (c) => {\n\t\t\tsubs.push(c);\n\t\t\tlet old = c.componentWillUnmount;\n\t\t\tc.componentWillUnmount = () => {\n\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\told && old();\n\t\t\t};\n\t\t};\n\t}\n\n\tfunction Provider(props) {\n\t\tif (!this.getChildContext) initProvider(this);\n\t\treturn props.children;\n\t}\n\tcontext.Provider = Provider;\n\n\treturn context;\n}\n",
    "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n",
    "import options from './options';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tif (props==null) props = {};\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tif (ref) delete props.ref;\n\tlet key = props.key;\n\tif (key) delete props.key;\n\n\treturn createVNode(type, props, null, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | null} props The properites of this virtual node\n * @param {string | number} text If this virtual node represents a text node,\n * this is the text of the node\n * @param {string |number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, text, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\ttext,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport /* istanbul ignore next */ function Fragment() { }\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, null, possibleVNode, null, null);\n\t}\n\n\tif (Array.isArray(possibleVNode)) {\n\t\treturn createElement(Fragment, null, possibleVNode);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.text, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n",
    "import { diff, unmount } from './index';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {import('../internal').Component} ancestorComponent The direct parent\n * component to the ones being diffed\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, oldDom) {\n\tlet childVNode, i, j, p, index, oldVNode, newDom,\n\t\tnextDom, sibDom, focus;\n\n\tlet newChildren = newParentVNode._children || toChildArray(newParentVNode.props.children, newParentVNode._children=[], coerceToVNode, true);\n\tlet oldChildren = oldParentVNode!=null && oldParentVNode!=EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\toldDom = null;\n\t\tif (excessDomChildren!=null) {\n\t\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\t\tif (excessDomChildren[i]!=null) {\n\t\t\t\t\toldDom = excessDomChildren[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\t\tif (oldChildren[i] && oldChildren[i]._dom) {\n\t\t\t\t\toldDom = oldChildren[i]._dom;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i=0; i<newChildren.length; i++) {\n\t\tchildVNode = newChildren[i] = coerceToVNode(newChildren[i]);\n\t\toldVNode = index = null;\n\n\t\t// Check if we find a corresponding element in oldChildren and store the\n\t\t// index where the element was found.\n\t\tp = oldChildren[i];\n\n\t\tif (childVNode!=null) {\n\t\t\tif (p===null || (p != null && (childVNode.key==null && p.key==null ? (childVNode.type === p.type) : (childVNode.key === p.key)))) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\tp = oldChildren[j];\n\t\t\t\t\tif (p!=null) {\n\t\t\t\t\t\tif (childVNode.key==null && p.key==null ? (childVNode.type === p.type) : (childVNode.key === p.key)) {\n\t\t\t\t\t\t\tindex = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we have found a corresponding old element we store it in a variable\n\t\t// and delete it from the array. That way the next iteration can skip this\n\t\t// element.\n\t\tif (index!=null) {\n\t\t\toldVNode = oldChildren[index];\n\t\t\t// We can't use `null` here because that is reserved for empty\n\t\t\t// placeholders (holes)\n\t\t\toldChildren[index] = undefined;\n\t\t}\n\n\t\tnextDom = oldDom!=null && oldDom.nextSibling;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tnewDom = diff(oldVNode==null ? null : oldVNode._dom, parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, null, oldDom);\n\n\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\tif (childVNode!=null && newDom !=null) {\n\t\t\t// Store focus in case moving children around changes it. Note that we\n\t\t\t// can't just check once for every tree, because we have no way to\n\t\t\t// differentiate wether the focus was reset by the user in a lifecycle\n\t\t\t// hook or by reordering dom nodes.\n\t\t\tfocus = document.activeElement;\n\n\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\tnewDom = childVNode._lastDomChild;\n\t\t\t}\n\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsibDom = oldDom;\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ((sibDom=sibDom.nextSibling) && j++<oldChildrenLength/2) {\n\t\t\t\t\t\tif (sibDom===newDom) {\n\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Restore focus if it was changed\n\t\t\tif (focus!==document.activeElement) {\n\t\t\t\tfocus.focus();\n\t\t\t}\n\n\t\t\toldDom = newDom!=null ? newDom.nextSibling : nextDom;\n\t\t}\n\t}\n\n\t// Remove children that are not part of any vnode. Only used by `hydrate`\n\tif (excessDomChildren!=null && newParentVNode.type!==Fragment) for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], ancestorComponent);\n}\n\n/**\n * Flatten a virtual nodes children to a single dimensional array\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {Array<import('../internal').VNode | null>} [flattened] An flat array of children to modify\n * @param {typeof import('../create-element').coerceToVNode} [map] Function that\n * will be applied on each child if the `vnode` is not `null`\n * @param {boolean} [keepHoles] wether to coerce `undefined` to `null` or not.\n * This is needed for Components without children like `<Foo />`.\n */\nexport function toChildArray(children, flattened, map, keepHoles) {\n\tif (flattened == null) flattened = [];\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (keepHoles) flattened.push(null);\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], flattened, map, keepHoles);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(map ? map(children) : children);\n\t}\n\n\treturn flattened;\n}\n",
    "import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { coerceToVNode, Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement | Text} dom The DOM element representing\n * the virtual nodes under diff\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode | null} newVNode The new virtual node\n * @param {import('../internal').VNode | null} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {import('../internal').Component | null} ancestorComponent The direct\n * parent component\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n */\nexport function diff(dom, parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, force, oldDom) {\n\t// If the previous type doesn't match the new type we drop the whole subtree\n\tif (oldVNode==null || newVNode==null || oldVNode.type!==newVNode.type || oldVNode.key!==newVNode.key) {\n\t\tif (oldVNode!=null) unmount(oldVNode, ancestorComponent);\n\t\tif (newVNode==null) return null;\n\t\tdom = null;\n\t\toldVNode = EMPTY_OBJ;\n\t}\n\n\tif (options.diff) options.diff(newVNode);\n\n\tlet c, p, isNew = false, oldProps, oldState, snapshot,\n\t\tnewType = newVNode.type;\n\n\t/** @type {import('../internal').Component | null} */\n\tlet clearProcessingException;\n\n\ttry {\n\t\touter: if (oldVNode.type===Fragment || newType===Fragment) {\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, c, oldDom);\n\n\t\t\t// Mark dom as empty in case `_children` is any empty array. If it isn't\n\t\t\t// we'll set `dom` to the correct value just a few lines later.\n\t\t\tdom = null;\n\n\t\t\tif (newVNode._children.length && newVNode._children[0]!=null) {\n\t\t\t\tdom = newVNode._children[0]._dom;\n\n\t\t\t\t// If the last child is a Fragment, use _lastDomChild, else use _dom\n\t\t\t\tp = newVNode._children[newVNode._children.length - 1];\n\t\t\t\tnewVNode._lastDomChild = p._lastDomChild || p._dom;\n\t\t\t}\n\t\t}\n\t\telse if (typeof newType==='function') {\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\tlet cxType = newType.contextType;\n\t\t\tlet provider = cxType && context[cxType._id];\n\t\t\tlet cctx = cxType != null ? (provider ? provider.props.value : cxType._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException;\n\t\t\t\tdom = newVNode._dom = oldVNode._dom;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (newType.prototype && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newVNode.props, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newVNode.props, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tc._ancestorComponent = ancestorComponent;\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newVNode.props;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tlet s = c._nextState || c.state;\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\toldState = assign({}, c.state);\n\t\t\t\tif (s===c.state) s = c._nextState = assign({}, s);\n\t\t\t\tassign(s, newType.getDerivedStateFromProps(newVNode.props, s));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newVNode.props, cctx);\n\t\t\t\t\ts = c._nextState || c.state;\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newVNode.props, s, cctx)===false) {\n\t\t\t\t\tdom = newVNode._dom;\n\t\t\t\t\tc.props = newVNode.props;\n\t\t\t\t\tc.state = s;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tnewVNode._lastDomChild = oldVNode._lastDomChild;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newVNode.props, s, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\tif (!oldState) oldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newVNode.props;\n\t\t\tc.state = s;\n\n\t\t\tif (options.render) options.render(newVNode);\n\n\t\t\tlet prev = c._prevVNode || null;\n\t\t\tlet vnode = c._prevVNode = coerceToVNode(c.render(c.props, c.state, c.context));\n\t\t\tc._dirty = false;\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tc._depth = ancestorComponent ? (ancestorComponent._depth || 0) + 1 : 0;\n\t\t\tc.base = dom = diff(dom, parentDom, vnode, prev, context, isSvg, excessDomChildren, mounts, c, null, oldDom);\n\n\t\t\tif (vnode!=null) {\n\t\t\t\t// If this component returns a Fragment (or another component that\n\t\t\t\t// returns a Fragment), then _lastDomChild will be non-null,\n\t\t\t\t// informing `diffChildren` to diff this component's VNode like a Fragemnt\n\t\t\t\tnewVNode._lastDomChild = vnode._lastDomChild;\n\t\t\t}\n\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tif (newVNode.ref) applyRef(newVNode.ref, c, ancestorComponent);\n\t\t}\n\t\telse {\n\t\t\tdom = diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent);\n\n\t\t\tif (newVNode.ref && (oldVNode.ref !== newVNode.ref)) {\n\t\t\t\tapplyRef(newVNode.ref, dom, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tnewVNode._dom = dom;\n\n\t\tif (c!=null) {\n\t\t\twhile (p=c._renderCallbacks.pop()) p.call(c);\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\t\t}\n\n\t\tif (clearProcessingException) {\n\t\t\tc._processingException = null;\n\t\t}\n\n\t\tif (options.diffed) options.diffed(newVNode);\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n\n\treturn dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\tcatchErrorInComponent(e, c._ancestorComponent);\n\t\t}\n\t}\n\n\tif (options.commit) options.commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to the ones being diffed\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent) {\n\tlet d = dom;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (let i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tdom = newVNode.type===null ? document.createTextNode(newVNode.text) : isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\tnewVNode._dom = dom;\n\n\tif (newVNode.type===null) {\n\t\tif ((d===null || dom===d) && newVNode.text!==oldVNode.text) {\n\t\t\tdom.data = newVNode.text;\n\t\t}\n\t}\n\telse {\n\t\tif (excessDomChildren!=null && dom.childNodes!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\t\tif (newVNode!==oldVNode) {\n\t\t\tlet oldProps = oldVNode.props;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// if we're hydrating, use the element's attributes as its current props:\n\t\t\tif (oldProps==null) {\n\t\t\t\toldProps = {};\n\t\t\t\tif (excessDomChildren!=null) {\n\t\t\t\t\tlet name;\n\t\t\t\t\tfor (let i=0; i<dom.attributes.length; i++) {\n\t\t\t\t\t\tname = dom.attributes[i].name;\n\t\t\t\t\t\toldProps[name=='class' && newProps.className ? 'className' : name] = dom.attributes[i].value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newProps.multiple) {\n\t\t\t\tdom.multiple = newProps.multiple;\n\t\t\t}\n\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, ancestorComponent, EMPTY_OBJ);\n\t\t\tdiffProps(dom, newProps, oldProps, isSvg);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} [ref=null]\n * @param {any} [value]\n */\nexport function applyRef(ref, value, ancestorComponent) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\tcatchErrorInComponent(e, ancestorComponent);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').Component} ancestorComponent The parent\n * component to this virtual node\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, ancestorComponent, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, ancestorComponent);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && vnode._lastDomChild==null) {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tcatchErrorInComponent(e, ancestorComponent);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tif (r = r._prevVNode) unmount(r, ancestorComponent, skipRemove);\n\t}\n\telse if (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], ancestorComponent, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').Component} component The first ancestor\n * component check for error boundary behaviors\n */\nfunction catchErrorInComponent(error, component) {\n\tfor (; component; component = component._ancestorComponent) {\n\t\tif (!component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._processingException = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\tthrow error;\n}\n",
    "import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot } from './diff/index';\nimport { diffChildren } from './diff/children';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n */\nexport function render(vnode, parentDom) {\n\tif (options.root) options.root(vnode, parentDom);\n\tlet oldVNode = parentDom._prevVNode;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiffChildren(parentDom, parentDom._prevVNode = vnode, oldVNode, EMPTY_OBJ, parentDom.ownerSVGElement!==undefined, oldVNode ? null : EMPTY_ARR.slice.call(parentDom.childNodes), mounts, vnode, EMPTY_OBJ);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\tparentDom._prevVNode = null;\n\trender(vnode, parentDom);\n}\n",
    "import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, null, props.key || vnode.key, props.ref || vnode.ref);\n}\n"
  ],
  "names": [
    "const",
    "options",
    "q",
    "defer",
    "CAMEL_REG",
    "i",
    "EMPTY_OBJ",
    "EMPTY_ARR",
    "IS_NON_DIMENSIONAL",
    "assign",
    "obj",
    "props",
    "let",
    "removeNode",
    "node",
    "parentNode",
    "removeChild",
    "createElement",
    "type",
    "children",
    "ref",
    "key",
    "arguments",
    "length",
    "push",
    "defaultProps",
    "undefined",
    "createVNode",
    "text",
    "vnode",
    "_children",
    "_dom",
    "_lastDomChild",
    "_component",
    "Fragment",
    "coerceToVNode",
    "possibleVNode",
    "Array",
    "isArray",
    "Component",
    "context",
    "enqueueRender",
    "c",
    "_dirty",
    "debounceRendering",
    "process",
    "p",
    "sort",
    "a",
    "b",
    "_depth",
    "pop",
    "forceUpdate",
    "diffChildren",
    "parentDom",
    "newParentVNode",
    "oldParentVNode",
    "isSvg",
    "excessDomChildren",
    "mounts",
    "ancestorComponent",
    "oldDom",
    "childVNode",
    "j",
    "index",
    "oldVNode",
    "newDom",
    "nextDom",
    "sibDom",
    "focus",
    "newChildren",
    "toChildArray",
    "oldChildren",
    "oldChildrenLength",
    "nextSibling",
    "diff",
    "document",
    "activeElement",
    "outer",
    "appendChild",
    "insertBefore",
    "unmount",
    "flattened",
    "map",
    "keepHoles",
    "diffProps",
    "dom",
    "newProps",
    "oldProps",
    "setProperty",
    "name",
    "value",
    "oldValue",
    "v",
    "s",
    "useCapture",
    "nameLower",
    "style",
    "cssText",
    "replace",
    "test",
    "toLowerCase",
    "substring",
    "addEventListener",
    "eventProxy",
    "removeEventListener",
    "_listeners",
    "removeAttributeNS",
    "removeAttribute",
    "setAttributeNS",
    "setAttribute",
    "e",
    "this",
    "event",
    "newVNode",
    "force",
    "isNew",
    "oldState",
    "snapshot",
    "newType",
    "clearProcessingException",
    "cxType",
    "provider",
    "cctx",
    "prev",
    "contextType",
    "_id",
    "_defaultValue",
    "_processingException",
    "prototype",
    "render",
    "constructor",
    "doRender",
    "_ancestorComponent",
    "sub",
    "state",
    "_context",
    "_renderCallbacks",
    "_vnode",
    "_nextState",
    "getDerivedStateFromProps",
    "componentWillMount",
    "componentDidMount",
    "componentWillReceiveProps",
    "shouldComponentUpdate",
    "componentWillUpdate",
    "_prevVNode",
    "getChildContext",
    "getSnapshotBeforeUpdate",
    "base",
    "_parentDom",
    "applyRef",
    "diffElementNodes",
    "call",
    "componentDidUpdate",
    "diffed",
    "catchErrorInComponent",
    "commitRoot",
    "root",
    "commit",
    "child",
    "oldHtml",
    "newHtml",
    "d",
    "nodeType",
    "localName",
    "createTextNode",
    "createElementNS",
    "data",
    "childNodes",
    "slice",
    "attributes",
    "className",
    "dangerouslySetInnerHTML",
    "__html",
    "innerHTML",
    "multiple",
    "current",
    "skipRemove",
    "r",
    "componentWillUnmount",
    "error",
    "component",
    "getDerivedStateFromError",
    "setState",
    "componentDidCatch",
    "ownerSVGElement",
    "update",
    "callback",
    "Promise",
    "then",
    "bind",
    "resolve",
    "setTimeout",
    "defaultValue",
    "ctx",
    "id",
    "Consumer",
    "Provider",
    "comp",
    "subs",
    "old",
    "splice",
    "indexOf"
  ],
  "mappings": "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"
}
